<style lang="scss">
.my-progress {

    width: 100%;

    .my-progress-label {
        width: 100%;
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        justify-content: space-between;
    }

    .my-progress-main {
        width: 100%;
        overflow: hidden;

        view {
            height: 100%;
        }
    }
}
</style>

<template>
    <view class="my-progress" style="">

        <view wx:if="{{showLabel}}" class="my-progress-label" style="color: {{color}};">
            <repeat for="{{labels}}">
                <text>
                    {{item}}
                </text>
            </repeat>
        </view>

        <view class="my-progress-main" style="background-color: {{backgroundColor}}; height: {{height}}rpx; border-radius: {{borderRadius ? height / 2 + 'rpx' : '0' }};">
            <view style="background-color: {{color}}; width: {{progress}}%;"></view>
        </view>

    </view>
</template>


<script>

import wepy from 'wepy';

export default class MyProgress extends wepy.component {

    props = {

        progress: {
            type: Number,
            default: 0
        },
        showLabel: {
            type: Boolean,
            default: true
        },
        borderRadius: {
            type: Boolean,
            default: true
        },
        section: {
            type: Number,
            default: 1
        },
        min: {
            type: Number,
            default: 0
        },
        max: {
            type: Number,
            default: 100
        },
        height: {
            type: Number,
            default: 36
        },
        color: {
            type: String,
            default: '#58A5FB'
        },
        backgroundColor: {
            type: String,
            default: '#E9E9E9'
        }


    }

    computed = {

        labels() {

            let ctx = this;
            let res = [];

            let step = (ctx.max - ctx.min) / ctx.section;

            for (let i = ctx.min; i < ctx.max; i += step) {
                res.push(i);
            }

            res.push(ctx.max);

            return res;

        }

    }


}
</script>
