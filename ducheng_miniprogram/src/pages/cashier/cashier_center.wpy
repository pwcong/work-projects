<style lang="scss">
.main {

    flex: 1;
    box-sizing: border-box;
    overflow: auto;

    padding-top: 40rpx;


    .row {
        width: 100%;
        background-color: white;
        box-sizing: border-box;
        padding: 0 35rpx;
    }

    .row-1 {
        height: 100rpx;
        display: flex;
        flex-flow: row nowrap;

        box-sizing: border-box;
        

        font-size: 17px;

        align-items: center;
        border-bottom: 1px solid #e5e5e5;

        image{
            width: 40rpx;
            height: 40rpx;
            margin-right: 18rpx;
        }
    }

    .row-2 {
        height: 128rpx;
        box-sizing: border-box;
        padding: 10rpx 35rpx;

        font-size: 16px;


        .row-2-wrap {
            height: 100%;
            display: flex;
            flex-flow: row nowrap;
            align-items: center;
            justify-content: space-between;
            border-bottom: 1px solid #e5e5e5;

            input {
                text-align: right;
            }
        }
    }

    .btn-submit {
        padding: 40rpx 0;
        box-sizing: border-box;
        width: 100%;

        background-color: white;

        view {

            margin: 0 auto;

            width: 360rpx;
            height: 70rpx;

            border: 1px solid #D30A0A;
            border-radius: 8rpx;
            line-height: 70rpx;
            text-align: center;

            color: #D30A0A;

            transition: background-color 0.1s, color 0.1s;

            &:active {
                color: white;
                background-color: #D30A0A;
            }
        }
    }

    .btn-logout {

        box-sizing: border-box;
        margin-top: 86rpx;
        padding: 0 30rpx;

        view {
            border-radius: 8rpx;
            width: 100%;
            height: 92rpx;
            color: white;
            background-color: #d30a0a;
            font-size: 18px;
            transition: background-color 0.1s, color 0.1s;

            display: flex;
            flex-flow: row nowrap;
            align-items: center;
            justify-content: center;

            &:active {
                color: white;
                background-color: #a20909;
            }
        }
    }
}
</style>
<template>
    <view class="container">

        <view class="main">

            <view class="row row-1">
                <image src="{{peopleIconUrl}}"/>
                基本信息
            </view>
            <view class="row row-2" style="margin-bottom: 40rpx;">
                <view class="row-2-wrap">
                    姓名
                    <input @input="handleNickNameChange" value="{{userInfo.nickName}}">
                </view>
            </view>

            <view class="row row-1">
                <image src="{{lockIconUrl}}"/>
                修改密码
            </view>
            <view class="row row-2">
                <view class="row-2-wrap">
                    原始密码
                    <input @input="handleOldPasswordChange" placeholder="请输入原始密码" password="true" />
                </view>
            </view>
            <view class="row row-2">
                <view class="row-2-wrap">
                    新密码
                    <input @input="handleNewPasswordChange" placeholder="请输入新密码" password="true" />
                </view>
            </view>
            <view class="row row-2">
                <view class="row-2-wrap">
                    重复新密码
                    <input @input="handleNewCheckPasswordChange" placeholder="请再次输入新密码" password="true" />
                </view>

            </view>

            <view class="btn-submit" @tap="handleSubmitButtonClick">
                <view>
                    确认
                </view>
            </view>

            <view class="btn-logout">
                <view @tap="handleLogoutButtonClick">
                    <image src="{{quitIconUrl}}" style="width: 40rpx; height: 40rpx; margin-right: 30rpx;">
                        </text>
                        退出登录
                </view>
            </view>

        </view>

    </view>
</template>

<script>
import wepy from 'wepy';

import EventBus from '../../eventbus/eventbus';

import * as userApi from '../../network/api/user';

export default class CashierCenter extends wepy.page {

    config = {
        navigationBarTitleText: '个人中心',
        disableScroll: true
    }
    components = {

    }

    data = {
        userInfoChanged: false,
        userInfo: {
            nickName: ''
        },

        oldPassword: '',
        newPassword: '',
        newCheckPassword: '',

        peopleIconUrl: '../../assets/imgs/icon_people_fill.png',
        lockIconUrl: '../../assets/imgs/icon_lock_fill.png',
        quitIconUrl: '../../assets/imgs/icon_quit.png',
    }

    computed = {

    }

    methods = {
        async handleSubmitButtonClick() {

            let ctx = this;

            // 修改个人信息
            if (ctx.userInfoChanged) {
                let res = null;

                wepy.showLoading({
                    title: '提交中',
                    mask: true
                });

                try {
                    res = await userApi.modifyInfo(
                        ctx.$parent.globalData.token,
                        null,
                        ctx.userInfo.nickName);

                } catch (err) {
                    wepy.navigateTo({
                        url: '../msg?type=warn&msg=修改失败&delta=1'
                    });
                    return;
                } finally {
                    wepy.hideLoading();
                }

                ctx.userInfoChanged = false;

                ctx.setUserInfo(res.user);

            }

            if (ctx.oldPassword || ctx.newPassword || ctx.newCheckPassword) {

                if (!ctx.oldPassword || !ctx.newPassword || !ctx.newCheckPassword) {
                    wepy.showModal({
                        title: '请输入原始密码和新密码',
                        showCancel: false
                    });
                    return;
                }

                if (ctx.newPassword != ctx.newCheckPassword) {
                    wepy.showModal({
                        title: '两次密码输入不一致',
                        showCancel: false
                    });
                    return;
                }

                let res = null;

                wepy.showLoading({
                    title: '提交中',
                    mask: true
                });

                try {

                    res = await userApi.modifyPassword(
                        ctx.$parent.globalData.token,
                        null,
                        ctx.oldPassword,
                        ctx.newPassword);



                } catch (err) {
                    wepy.navigateTo({
                        url: '../msg?type=warn&msg=请求失败&delta=1'
                    });
                    return;
                } finally {
                    wepy.hideLoading();
                }

                wepy.navigateTo({
                    url: `../msg?type=success&msg=修改成功&delta=-1`
                });

                return;

            }

            wepy.navigateTo({
                url: `../msg?type=success&msg=修改成功&delta=1`
            });
        },
        handleLogoutButtonClick() {
            let ctx = this;
            ctx.$parent.clearLoginStat();
            wepy.reLaunch({
                url: '../index'
            });
        },

        handleNickNameChange(e) {
            this.userInfoChanged = true;
            this.userInfo.nickName = e.detail.value;
        },
        handleOldPasswordChange(e) {
            this.oldPassword = e.detail.value;
        },
        handleNewPasswordChange(e) {
            this.newPassword = e.detail.value;
        },
        handleNewCheckPasswordChange(e) {
            this.newCheckPassword = e.detail.value;
        }
    }

    events = {

    }

    setUserInfo(userInfo) {


        let ctx = this;

        ctx.$parent.globalData.user = Object.assign({}, ctx.$parent.globalData.user, userInfo);
        EventBus.emit('cashier-loaduserinfo');

        ctx.userInfo.nickName = userInfo.nickname;

        ctx.$apply();

    }

    async loadUserInfo(onStart, onFinish) {

        let ctx = this;

        onStart && onStart();

        let res = null;

        try {
            res = await userApi.getInfo(ctx.$parent.globalData.token);
        } catch (err) {
            wepy.showModal({
                title: '获取失败',
                content: err,
                showCancel: false
            });
            return;
        } finally {
            onFinish && onFinish();
        }

        ctx.setUserInfo(res.user);

    }

    onLoad() {

        let ctx = this;

        ctx.loadUserInfo(
            () => {
                wepy.showLoading({
                    title: '获取中',
                    mask: true
                });
            },
            () => {
                wepy.hideLoading();
            });


    }
}
</script>
